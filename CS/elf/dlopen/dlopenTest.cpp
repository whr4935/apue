#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <dlfcn.h>
#include "dlopenTest.h"

void dlopentest1();

int main(int argc, char *argv[])
{
    const char* libs_dir = getenv("LIBS_DIR");
    printf("libs_dir: %s\n", libs_dir);

    char buf[1024];
    strcpy(buf, libs_dir);
    strcat(buf, "/");

    const char* lib_name = "libdlopentest2.so";
    strcat(buf, lib_name);

    printf("buf:%s\n", buf);

    void* handle = dlopen(buf, RTLD_NOW);
    if (handle == NULL) {
        printf("dlopen failed! %s\n", dlerror());
        return -1;
    }

    struct ApiStruct s{};

    const char* symbolName = "initApiStruct";
    InitApiStruct* pf= (InitApiStruct*)dlsym(handle, symbolName);
    if (pf == nullptr) {
        printf("dlsym failed! %s", dlerror());
        dlclose(handle);
        return -1;
    }

    pf(&s);

    ApiFunc1* func1 = (ApiFunc1*)dlsym(handle, "apiFunc1");
    if (func1 == nullptr) {
        printf("dlsym apiFunc1 failed!\n");
        dlclose(handle);
        return -1;
    }

    printf("version 1: apiFunc1 addr:%p\n", s.func1);
    printf("version 2: apiFunc1 addr:%p\n", func1);


    dlclose(handle);
    return 0;
}
