#include <stdio.h>
#include <dlfcn.h>
#include <stdlib.h>
#include <string.h>

extern "C" {
//void test_symbol() __attribute__ ((visibility ("hidden")));

void test_symbol() 
{
    printf("%s, hello test one!\n", __FUNCTION__);
}

}

void dlopentest1()
{
    const char* libs_dir = getenv("LIBS_DIR");
    printf("libs_dir: %s\n", libs_dir);

    char buf[1024];
    strcpy(buf, libs_dir);
    strcat(buf, "/");

    const char* lib_name = "libdlopentest1.so";
    strcat(buf, lib_name);

    printf("buf:%s\n", buf);

    void* handle = dlopen(buf, RTLD_LAZY);
    if (handle == NULL) {
        printf("dlopen failed! %s\n", dlerror());
        return;
    }

    const char* symbolName = "test_symbol";
    void (*pf)() = (void (*)())dlsym(handle, symbolName);
    if (pf == nullptr) {
        printf("dlsym failed! %s", dlerror());
        goto exit;
    }

    printf("pf: %p\n", pf);
    pf();

exit:
    if (handle != nullptr) {
        dlclose(handle);
    }

}
